import { U as UseThreadsOptions } from './suspense-i9xgTMdV.mjs';
export { b as ClientContext, C as ClientSideSuspense, W as CreateThreadError, L as LiveblocksProvider, M as MutationContext, R as RoomContext, i as RoomProvider, a as UseStorageStatusOptions, c as createLiveblocksContext, h as createRoomContext, j as useAddReaction, k as useBatch, l as useBroadcastEvent, m as useCanRedo, n as useCanUndo, u as useClient, V as useCommentsErrorListener, o as useCreateComment, p as useCreateThread, f as useDeleteAllInboxNotifications, q as useDeleteComment, g as useDeleteInboxNotification, r as useDeleteThread, s as useEditComment, t as useEditThreadMetadata, x as useErrorListener, y as useEventListener, z as useHistory, _ as useInboxNotificationThread, a4 as useInboxNotifications, A as useIsInsideRoom, B as useLostConnectionListener, d as useMarkAllInboxNotificationsAsRead, e as useMarkInboxNotificationAsRead, D as useMarkThreadAsRead, v as useMarkThreadAsResolved, w as useMarkThreadAsUnresolved, E as useMutation, F as useMyPresence, X as useOther, Y as useOthers, Z as useOthersConnectionIds, G as useOthersListener, $ as useOthersMapped, H as useRedo, I as useRemoveReaction, J as useRoom, a6 as useRoomInfo, K as useRoomNotificationSettings, a0 as useSelf, N as useStatus, a1 as useStorage, O as useStorageRoot, a2 as useStorageStatus, P as useThreadSubscription, a3 as useThreads, Q as useUndo, a7 as useUnreadInboxNotificationsCount, S as useUpdateMyPresence, T as useUpdateRoomNotificationSettings, a8 as useUser, a5 as useUserThreads_experimental } from './suspense-i9xgTMdV.mjs';
export { Json, JsonObject, shallow } from '@liveblocks/client';
import { BaseMetadata, CacheState, ThreadData } from '@liveblocks/core';
import 'react';

/**
 * @private Do not rely on this internal API.
 */
declare function selectedThreads<M extends BaseMetadata>(roomId: string, state: CacheState<M>, options: UseThreadsOptions<M>): ThreadData<M>[];

export { UseThreadsOptions, selectedThreads };
